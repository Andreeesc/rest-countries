{"version":3,"sources":["components/Country/styles.js","components/Country/index.js","components/FilterRegion/styles.js","components/FilterRegion/index.js","components/Header/styles.js","components/Header/index.js","components/SearchBar/styles.js","components/SearchBar/index.js","global.styles.js","theme.js","App.js","index.js"],"names":["Container","styled","div","theme","colorCard","colorText","Country","flags","common","name","population","region","capital","src","svg","alt","title","className","SelectStyle","select","FilterRegion","continent","getUpdateRegion","value","onChange","header","colorButton","Header","changeTheme","onClick","window","location","reload","xmlns","width","class","fill","viewBox","stroke","stroke-linecap","stroke-linejoin","stroke-width","d","Form","form","colorTextDark","SearchBar","getSearch","getUpdateSearch","type","placeholder","GlobalStyles","createGlobalStyle","colorBackground","ContainerApp","ContainerGrid","FilterCountry","lightTheme","darkTheme","App","useState","setTheme","countries","setCountries","search","setSearch","setRegion","a","fetch","response","status","json","data","alert","useEffect","getCountries","e","target","filter","country","countryFilter","toLowerCase","includes","map","index","regionFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.736a532d.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  border-radius: 10px;\n  background-color: ${ ({ theme }) => theme.colorCard};\n  filter: drop-shadow(0 0 2px var(--drop-shadow));\n\n  figure {\n    margin: 0;\n    height: 160px;\n    overflow: hidden;\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n    img {\n      max-width: 100%;\n    }\n  }\n\n  .card-info {\n    padding: 20px;\n    h2,\n    p {\n      font-family: var(--font-nunito);\n      color: ${ ({ theme }) => theme.colorText};\n    }\n\n    h2 {\n      font-size: 1.5rem;\n      font-weight: 600;\n      margin-bottom: 20px;\n    }\n    p {\n      font-weight: 300;\n      margin-bottom: 10px;\n      &:last-child {\n        margin-bottom: 0;\n      }\n      strong {\n        font-weight: 600;\n        font-size: 1em;\n      }\n    }\n  }\n`;\n","import * as S from './styles'\n\nexport const Country = ({ flags, name:{common}, population, region, capital }) => {\n  return (\n    <S.Container>\n      <figure>\n        <img src={flags.svg} alt={common} title={common} />\n      </figure>\n      <div className=\"card-info\">\n        <h2>{common}</h2>\n        <p>\n          <strong>Population:</strong> {population}\n        </p>\n        <p>\n          <strong>Region:</strong> {region}\n        </p>\n        <p>\n          <strong>Capital:</strong> {capital}\n        </p>\n      </div>\n    </S.Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SelectStyle = styled.select`\n  padding: 10px 20px;\n  outline: none;\n  border: none;\n  border-radius: 5px;\n  background-color: ${ ({ theme }) => theme.colorCard};\n  color: ${ ({ theme }) => theme.colorText};\n  font-family: var(--font-nunito);\n  font-weight: 300;\n  filter: drop-shadow(0 0 2px var(--drop-shadow));\n`;\n","import * as S from './styles'\n\nexport const FilterRegion = ({ continent, getUpdateRegion }) => {\n  return (\n    <S.SelectStyle value={continent} onChange={getUpdateRegion}>\n      <option value=\"\">Filter by Region</option>\n      <option value=\"Africa\">Africa</option>\n      <option value=\"Americas\">Americas</option>\n      <option value=\"Antarctic\">Antarctic</option>\n      <option value=\"Asia\">Asia</option>\n      <option value=\"Europe\">Europe</option>\n      <option value=\"Oceania\">Oceania</option>\n    </S.SelectStyle>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.header`\n  padding: 20px 0;\n  background-color: ${ ({ theme }) => theme.colorCard};\n  @media (max-width: 767px) {\n    text-align: center;\n  }\n\n  div {\n    max-width: 1080px;\n    margin: 0 auto;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    @media (max-width: 767px) {\n      flex-direction: column;\n    }\n\n    h1 {\n      font-size: 2rem;\n      font-family: var(--font-nunito);\n      color: ${ ({ theme }) => theme.colorText};\n      &:hover {\n        cursor: pointer;\n      }\n    }\n\n    button{\n      border-radius: 5px;\n      display: flex;\n      align-items: center;\n      font-weight: 700;\n      &:hover{\n        background-color: ${ ({ theme }) => theme.colorButton};\n      }\n\n      svg{\n        margin-right: 10px;\n      }\n    }\n  }\n`;\n","import * as S from './styles'\n\nexport const Header = ({changeTheme, theme}) => {\n  return (\n    <S.Container>\n      <div>\n        <h1 onClick={() => window.location.reload(false)}>\n          Where in the world?\n        </h1>\n\n        {\n          theme !== 'lightTheme' ? (\n            <button onClick={changeTheme}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" />\n              </svg>\n              Light theme\n            </button>\n          ) : (\n            <button onClick={changeTheme}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />\n              </svg>\n              Dark theme\n            </button>\n          )\n        }\n        \n      </div>\n    </S.Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  input {\n    border-radius: 5px;\n    background-color: ${ ({ theme }) => theme.colorCard};\n    max-width: 100%;\n    filter: drop-shadow(0 0 2px var(--drop-shadow));\n\n    &::placeholder {\n      color: ${ ({ theme }) => theme.colorText};\n    }\n    @media (max-width: 767px) {\n      margin-bottom: 20px;\n    }\n  }\n\n  button {\n    border-left: 1px solid ${ ({ theme }) => theme.colorTextDark};\n    border-bottom-right-radius: 5px;\n    border-top-right-radius: 5px;\n  }\n`;\n","import * as S from './styles'\n\nexport const SearchBar = ({ getSearch, getUpdateSearch }) => {\n  return (\n    <S.Form>\n      <input\n        type=\"text\"\n        placeholder=\"Search for a country...\"\n        value={getSearch}\n        onChange={getUpdateSearch}\n      />\n    </S.Form>\n  );\n};\n","import styled, { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n\n  html{\n    --font-nunito: 'Nunito Sans', sans-serif;\n    --drop-shadow: hsl(209, 23%, 22%);\n  }\n\n  *{\n    margin: 0;\n    padding: 0;\n  }\n\n  input, button{\n    padding: 10px 20px;\n    outline: none;\n    border: none;\n    background-color: ${ ({ theme }) => theme.colorBackground};\n    color: ${ ({ theme }) => theme.colorText};\n    font-family: var(--font-nunito);\n    font-weight: 300;\n  }\n  button{\n    cursor: pointer;\n    text-align: center;\n    transition: all .5s ease;\n    &:hover{\n      background-color: ${ ({ theme }) => theme.colorTextDark};\n    }\n    &.show-more{\n      display: block;\n      margin: 0 auto;\n    }\n  }\n`;\n\nexport const ContainerApp = styled.div`\n  background-color: ${ ({ theme }) => theme.colorBackground};\n`;\n\nexport const ContainerGrid = styled.div`\n  margin: 0 auto;\n  max-width: 1080px;\n  padding: 0 0 40px;\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 40px;\n\n  @media (max-width: 767px) {\n    padding: 20px;\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const FilterCountry = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 40px 0;\n  margin: 0 auto;\n  max-width: 1080px;\n\n  @media (max-width: 767px) {\n    flex-direction: column;\n  }\n`;\n","export const lightTheme = {\r\n  colorBackground: 'hsl(0, 0%, 100%)',\r\n  colorCard: 'hsl(0, 0%, 95%)',\r\n  colorButton: 'hsl(0, 0%, 90%)',\r\n  colorTextDark: 'hsl(207, 26%, 17%)',\r\n  colorText: 'hsl(200, 15%, 8%)'\r\n}\r\n\r\nexport const darkTheme = {\r\n  colorBackground: 'hsl(207, 26%, 17%)',\r\n  colorCard: 'hsl(209, 23%, 22%)',\r\n  colorButton: 'hsl(209, 23%, 30%)',\r\n  colorTextDark: 'hsl(0, 0%, 52%)',\r\n  colorText: 'hsl(0, 0%, 100%)'\r\n}","import { useEffect, useState } from 'react';\n\nimport { ThemeProvider } from 'styled-components';\n\nimport { Country } from './components/Country';\nimport { FilterRegion } from './components/FilterRegion';\nimport { Header } from './components/Header';\nimport { SearchBar } from './components/SearchBar';\n\nimport * as S from './global.styles'\nimport { darkTheme, lightTheme } from './theme';\n\nfunction App() {\n  const [theme, setTheme] = useState('darkTheme');\n  function toggleTheme() {\n    if (theme === 'darkTheme') {\n      setTheme('lightTheme');\n    } else {\n      setTheme('darkTheme');\n    }\n  }\n\n  const [countries, setCountries] = useState([]);\n  const [search, setSearch] = useState('');\n  const [region, setRegion] = useState('');\n\n  // Todos os países\n  async function getCountries() {\n    try {\n      const response = await fetch(`https://restcountries.com/v3.1/all`);\n      if (response.status !== 200) throw 'Não possível realizar essa ação';\n      const data = await response.json();\n      setCountries(data);\n    } catch (err) {\n      alert(err);\n    }\n  }\n\n  useEffect(() => {\n    getCountries();\n  }, [region]);\n  // Todos os países\n\n  // Países pesquisados\n  function updateSearch(e) {\n    setSearch(e.target.value);\n  }\n  // Países pesquisados\n\n\n  // Filtragem de continente\n  function updateRegion(e){\n    setRegion(e.target.value)\n  }\n\n  // Filtragem de continente\n\n  return (\n    <ThemeProvider theme={theme === 'darkTheme' ? darkTheme : lightTheme}>\n      <>\n        <S.GlobalStyles />\n        <div className=\"App\">\n          <Header changeTheme={toggleTheme} theme={theme} />\n\n          <S.ContainerApp>\n            <S.FilterCountry>\n              <SearchBar getSearch={search} getUpdateSearch={updateSearch} />\n\n              <FilterRegion continent={region} getUpdateRegion={updateRegion} />\n            </S.FilterCountry>\n\n            <S.ContainerGrid>\n\n              {\n                region === '' ? (\n                  [...countries]\n                  ?.filter(country => {\n                    const countryFilter = country.name.common\n                      .toLowerCase()\n                      .includes(search.toLowerCase());\n                    if (search === '' || countryFilter) {\n                      return country;\n                    }\n                  })\n                  ?.map((country, index) => (\n                    <Country key={index} {...country} />\n                  ))\n                ) : (\n                  [...countries]\n                  ?.filter(country => {\n                    const regionFilter = country.region.includes(region);\n                    if (region === '' || regionFilter) {\n                      return country;\n                    }\n                  })\n                  ?.filter(country => {\n                    const countryFilter = country.name.common\n                      .toLowerCase()\n                      .includes(search.toLowerCase());\n                    if (search === '' || countryFilter) {\n                      return country;\n                    }\n                  })\n                  ?.map((country, index) => (\n                    <Country key={index} {...country} />\n                  ))\n                )\n              }\n\n            </S.ContainerGrid>\n          </S.ContainerApp>\n        </div>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}